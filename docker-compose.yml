version: '3.8'
services:
  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --locale=ja_JP.UTF-8'
      TZ: Asia/Tokyo

  adminer:
    image: adminer
    ports:
      - 8080:8080

  app: &app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_VERSION: '14-alpine'
        RUBY_VERSION: '2.7-alpine'
        YARN_VERSION: '1.22.5'

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
      - WEBPACKER_DEV_SERVER_HOST=webpack
      - WEB_CONCURRENCY=1
      - HISTFILE=/app/log/.bash_history
      - PSQL_HISTFILE=/app/log/.psql_history
      - EDITOR=vi
    depends_on:
      - postgres
    env_file: .env

  rails:
    <<: *backend
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - '3000:3000'

  webpack:
    <<: *app
    command: "bin/webpack-dev-server"
    ports:
      - '3035:3035'
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
    depends_on:
      - rails

volumes:
  postgres:
  rails_cache:
  bundle:
  node_modules:
  packs:
